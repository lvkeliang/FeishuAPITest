{"name": "test_text_messages[positive_基础文本消息测试1]", "status": "broken", "statusDetails": {"message": "KeyError: 'tenant_access_token'", "trace": "request = <SubRequest 'prepared_test_case' for <Function test_text_messages[positive_基础文本消息测试1]>>\n\n    @pytest.fixture\n    def prepared_test_case(request):\n        \"\"\"准备测试用例，执行setup并替换变量\"\"\"\n        loader = test_case_loader\n        test_case = request.param  # 从参数化获取测试用例\n    \n        # 1. 执行setup操作\n        if test_case.setup:\n>           setup_context = loader.execute_setup(test_case.setup)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\api\\message\\test_message.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests\\test_data\\case_loader.py:97: in execute_setup\n    context[action[\"save_to\"]] = feishu_client.tenant_access_token\n                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\client\\client.py:53: in tenant_access_token\n    self.refresh_token()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.client.client.FeishuClient object at 0x0000023A761B2E40>\n\n    def refresh_token(self):\n        \"\"\"刷新access token\"\"\"\n        url = f\"{self.base_url}/open-apis/auth/v3/tenant_access_token/internal\"\n        payload = {\n            \"app_id\": config.env_config[\"feishu\"][\"app_id\"],\n            \"app_secret\": config.env_config[\"feishu\"][\"app_secret\"]\n        }\n        response = requests.post(\n            url,\n            json=payload,\n            timeout=self.timeout\n        )\n        response.raise_for_status()\n>       self._tenant_access_token = response.json()[\"tenant_access_token\"]\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       KeyError: 'tenant_access_token'\n\ntests\\client\\client.py:69: KeyError"}, "parameters": [{"name": "prepared_test_case", "value": "TestCaseModel(name='基础文本消息测试', description='测试发送基本文本消息', category='positive', request=RequestModel(method='POST', endpoint='/open-apis/im/v1/messages', query_params={'receive_id_type': 'open_id'}, headers={'Content-Type': 'application/json', 'Authorization': 'Bearer $access_token$'}, body={'receive_id': '$open_id$', 'msg_type': 'text', 'content_json': {'text': '$text$'}, 'uuid': '$random_uuid$'}), expected=ExpectedModel(status_code=200, headers={'Content-Type': 'application/json; charset=utf-8'}, schema='message_response_schema', body={'code': 0, 'msg': 'success', 'data': {'msg_type': 'text', 'deleted': False, 'updated': False, 'sender.id_type': 'app_id', 'body.content': {'@contains': 'test content json dumps2'}}}), setup=[{'action': 'get_tenant_access_token', 'save_to': 'access_token'}, {'action': 'get_open_id', 'save_to': 'open_id'}, {'action': 'generate_uuid', 'save_to': 'random_uuid'}, {'action': 'load_text', 'save_to': 'text', 'text_path': 'tests\\\\test_data\\\\message\\\\interactive\\\\cards\\\\testtext.txt'}], teardown=[{'action': 'delete_message', 'params': {'message_id': '$response.data.message_id$'}}])"}], "start": 1751715842732, "stop": 1751715842732, "uuid": "9b76451b-0798-4031-8db2-70a135ee61d9", "historyId": "4c250ea3a083b49d4217518416e77dd4", "testCaseId": "e3ec8bf0877ed7ded8aa02fb6cf06e8d", "fullName": "tests.api.message.test_message#test_text_messages", "labels": [{"name": "parentSuite", "value": "tests.api.message"}, {"name": "suite", "value": "test_message"}, {"name": "host", "value": "OYY"}, {"name": "thread", "value": "7260-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.api.message.test_message"}]}